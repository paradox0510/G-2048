{"version":3,"sources":["index.js"],"names":["GiveRand","min","max","Math","floor","random","Main","props","xDown","yDown","firstTouch","state","board","gmaeOver","score","Highscore","x1","x2","y1","y2","this","setState","Board","blankCoordinates","r","length","c","push","getBlankCoordinates","randomCoordinate","randomNumber","original","updated","JSON","stringify","b","deepcopy","a","i","j","p","temp","k","isChanged","placeRand","up","down","right","left","includes","initBoard","hs","window","localStorage","getItem","hsi","parse","document","querySelector","addEventListener","handleKeyDown","bind","handleTouchStart","handleTouchMove","evt","touches","originalEvent","clientX","clientY","xUp","yUp","xDiff","yDiff","abs","makeMove","e","keyCode","dir","obj","isGameOver","setItem","removeEventListener","className","map","row","Row","onClick","React","Component","cell","Cell","cellValue","color","value","ReactDOM","render","getElementById"],"mappings":"4LAIA,SAASA,EAASC,EAAKC,GAErB,OADQC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,G,IAM7CK,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,KACb,EAAKC,MAAQ,KACb,EAAKC,WAAa,KAClB,EAAKC,MAAQ,CACXC,MAAO,CACL,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEZC,UAAU,EACVC,MAAO,EACPC,UAAW,GAdI,E,6CAkBnB,WACE,IAAIH,EAAQ,CACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAERI,EAAKhB,EAAS,EAAG,GACnBiB,EAAKjB,EAAS,EAAG,GACjBkB,EAAKlB,EAAS,EAAG,GACjBmB,EAAKnB,EAAS,EAAG,GACnBY,EAAMI,GAAIE,GAAM,EAAIlB,EAAS,EAAG,GAChCY,EAAMK,GAAIE,GAAM,EAAInB,EAAS,EAAG,GAChCoB,KAAKC,SAAS,CAAET,QAAOC,UAAU,EAAOC,MAAM,M,iCAGhD,SAAoBQ,GAIlB,IAFA,IAAMC,EAAmB,GAEhBC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAChC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAME,GAAGC,OAAQC,IACf,IAAhBJ,EAAME,GAAGE,IACXH,EAAiBI,KAAK,CAACH,EAAGE,IAKhC,OAAOH,I,uBAGT,SAAUX,GACR,IAAMW,EAAmBH,KAAKQ,oBAAoBhB,GAC5CiB,EAAmBN,EAAiBpB,KAAKC,MAAMD,KAAKE,SAAWkB,EAAiBE,SAChFK,EAAe,EAAE9B,EAAS,EAAE,GAGlC,OADAY,EAAMiB,EAAiB,IAAIA,EAAiB,IAAMC,EAC3ClB,I,uBAGT,SAAUmB,EAAUC,GAClB,OAAQC,KAAKC,UAAUF,KAAaC,KAAKC,UAAUH,K,gBAIrD,SAAGnB,GAID,IAHA,IAAIuB,EAAIC,EAASxB,GACXyB,EAAID,EAASD,GAEVG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAK,EAAEA,IACjB,GAAa,IAAVJ,EAAEI,GAAGD,GAAO,CAEb,IADA,IAAIE,EAAED,EAAE,EACFC,EAAE,GAAe,IAAVL,EAAEK,GAAGF,IAChBE,IAEF,GAAO,IAAJA,EACH,MACA,IAAIC,EAAKN,EAAEK,GAAGF,GACdH,EAAEK,GAAGF,GAAGH,EAAEI,GAAGD,GACbH,EAAEI,GAAGD,GAAGG,EAKd,IADA,IAAI3B,EAAM,EACDwB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IACd,GAAGJ,EAAEI,GAAGD,KAAKH,EAAEI,EAAE,GAAGD,GACpB,CACEH,EAAEI,GAAGD,IAAI,EACTxB,GAAOqB,EAAEI,GAAGD,GAEZ,IADA,IAAII,EAAEH,EAAE,EACFG,EAAE,GACNP,EAAEO,GAAGJ,GAAGH,EAAEO,EAAE,GAAGJ,GACfI,IAEFP,EAAEO,GAAGJ,GAAG,EAQd,OAHGlB,KAAKuB,UAAUN,EAAEF,KACjBA,EAAIf,KAAKwB,UAAUT,IAEf,CAACA,IAAErB,W,kBAGZ,SAAKF,GAIH,IAHA,IAAIuB,EAAIC,EAASxB,GACXyB,EAAID,EAASD,GAEVG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAK,EAAGA,IAClB,GAAa,IAAVJ,EAAEI,GAAGD,GAAO,CAEb,IADA,IAAIE,EAAED,EAAE,EACFC,GAAG,GAAe,IAAVL,EAAEK,GAAGF,IACjBE,IAEF,IAAQ,IAALA,EACH,MACA,IAAIC,EAAKN,EAAEK,GAAGF,GACdH,EAAEK,GAAGF,GAAGH,EAAEI,GAAGD,GACbH,EAAEI,GAAGD,GAAGG,EAKd,IADA,IAAI3B,EAAM,EACDwB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IACd,GAAGJ,EAAEI,GAAGD,KAAKH,EAAEI,EAAE,GAAGD,GACpB,CACEH,EAAEI,GAAGD,IAAI,EACTxB,GAAOqB,EAAEI,GAAGD,GAEZ,IADA,IAAII,EAAEH,EAAE,EACFG,EAAE,GACNP,EAAEO,GAAGJ,GAAGH,EAAEO,EAAE,GAAGJ,GACfI,IAEFP,EAAEO,GAAGJ,GAAG,EAQf,OAHIlB,KAAKuB,UAAUN,EAAEF,KACjBA,EAAIf,KAAKwB,UAAUT,IAEhB,CAACA,IAAErB,W,mBAGX,SAAMF,GAIJ,IAHA,IAAIuB,EAAIC,EAASxB,GACXyB,EAAID,EAASD,GAEVG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAK,EAAGA,IAClB,GAAa,IAAVJ,EAAEG,GAAGC,GAAO,CAEb,IADA,IAAIC,EAAED,EAAE,EACFC,GAAG,GAAe,IAAVL,EAAEG,GAAGE,IACjBA,IAEF,IAAQ,IAALA,EACH,MACA,IAAIC,EAAKN,EAAEG,GAAGE,GACdL,EAAEG,GAAGE,GAAGL,EAAEG,GAAGC,GACbJ,EAAEG,GAAGC,GAAGE,EAKd,IADA,IAAI3B,EAAM,EACDwB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IACd,GAAGJ,EAAEG,GAAGC,KAAKJ,EAAEG,GAAGC,EAAE,GACpB,CACEJ,EAAEG,GAAGC,IAAI,EACTzB,GAAOqB,EAAEG,GAAGC,GAEZ,IADA,IAAIG,EAAEH,EAAE,EACFG,EAAE,GACNP,EAAEG,GAAGI,GAAGP,EAAEG,GAAGI,EAAE,GACfA,IAEFP,EAAEG,GAAGI,GAAG,EAQf,OAHItB,KAAKuB,UAAUN,EAAEF,KACjBA,EAAIf,KAAKwB,UAAUT,IAEhB,CAACA,IAAErB,W,kBAGX,SAAKF,GAIH,IAHA,IAAIuB,EAAIC,EAASxB,GACXyB,EAAID,EAASD,GAEVG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAK,EAAEA,IACjB,GAAa,IAAVJ,EAAEG,GAAGC,GAAO,CAEb,IADA,IAAIC,EAAED,EAAE,EACFC,EAAE,GAAe,IAAVL,EAAEG,GAAGE,IAChBA,IAEF,GAAO,IAAJA,EACH,MACA,IAAIC,EAAKN,EAAEG,GAAGE,GACdL,EAAEG,GAAGE,GAAGL,EAAEG,GAAGC,GACbJ,EAAEG,GAAGC,GAAGE,EAKd,IADA,IAAI3B,EAAM,EACDwB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IACd,GAAGJ,EAAEG,GAAGC,KAAKJ,EAAEG,GAAGC,EAAE,GACpB,CACEJ,EAAEG,GAAGC,IAAI,EACTzB,GAAOqB,EAAEG,GAAGC,GAEZ,IADA,IAAIG,EAAEH,EAAE,EACFG,EAAE,GACNP,EAAEG,GAAGI,GAAGP,EAAEG,GAAGI,EAAE,GACfA,IAEFP,EAAEG,GAAGI,GAAG,EAQf,OAHItB,KAAKuB,UAAUN,EAAEF,KACjBA,EAAIf,KAAKwB,UAAUT,IAEhB,CAACA,IAAErB,W,wBAGX,SAAWF,GAST,OARc,CACZQ,KAAKuB,UAAU/B,EAAMQ,KAAKyB,GAAGjC,GAAOuB,GACpCf,KAAKuB,UAAU/B,EAAMQ,KAAK0B,KAAKlC,GAAOuB,GACtCf,KAAKuB,UAAU/B,EAAMQ,KAAK2B,MAAMnC,GAAOuB,GACvCf,KAAKuB,UAAU/B,EAAMQ,KAAK4B,KAAKpC,GAAOuB,IAItBc,UAAS,K,+BAI7B,WACE7B,KAAK8B,YACL,IAAIC,EAAKC,OAAOC,aAAaC,QAAQ,SACjCC,EAAOJ,EAAIlB,KAAKuB,MAAML,GAAI,EAC9B/B,KAAKC,SAAS,CAACN,UAAUwC,IACZE,SAASC,cAAc,QAC/BC,iBAAiB,UAAWvC,KAAKwC,cAAcC,KAAKzC,OACzDqC,SAASE,iBAAiB,aAAcvC,KAAK0C,iBAAiBD,KAAKzC,OAAM,GACzEqC,SAASE,iBAAiB,YAAavC,KAAK2C,gBAAgBF,KAAKzC,OAAM,K,8BASzE,SAAiB4C,GAEb5C,KAAKV,YAAcsD,EAAIC,SACvBD,EAAIE,cAAcD,SAAS,GAC3B7C,KAAKZ,MAAQY,KAAKV,WAAWyD,QAC7B/C,KAAKX,MAAQW,KAAKV,WAAW0D,U,6BAGjC,SAAgBJ,GACZ,GAAO5C,KAAKZ,OAAWY,KAAKX,MAA5B,CAIA,IAAI4D,EAAML,EAAIC,QAAQ,GAAGE,QACrBG,EAAMN,EAAIC,QAAQ,GAAGG,QAErBG,EAAQnD,KAAKZ,MAAQ6D,EACrBG,EAAQpD,KAAKX,MAAQ6D,EAGpBnE,KAAKsE,IAAKF,GAAUpE,KAAKsE,IAAKD,GAC1BD,EAAQ,EACXnD,KAAKsD,SAAS,QAEdtD,KAAKsD,SAAS,SAGXF,EAAQ,EACXpD,KAAKsD,SAAS,MAEdtD,KAAKsD,SAAS,QAIpBtD,KAAKZ,MAAQ,KACbY,KAAKX,MAAQ,Q,2BAEjB,SAAckE,GACD,KAMPA,EAAEC,QACJxD,KAAKsD,SAAS,MANF,KAOHC,EAAEC,QACXxD,KAAKsD,SAAS,SAPH,KAQFC,EAAEC,QACXxD,KAAKsD,SAAS,QARH,KASFC,EAAEC,QACXxD,KAAKsD,SAAS,QATN,KAUCC,EAAEC,SACXxD,KAAK8B,c,sBAOT,SAAS2B,GACP,IAAIzD,KAAKT,MAAME,SACb,GAAS,OAANgE,EAAW,CACZ,IAAMC,EAAM1D,KAAKyB,GAAGzB,KAAKT,MAAMC,OACzBuB,EAAI2C,EAAI3C,EACRrB,EAAQgE,EAAIhE,MACfM,KAAK2D,WAAW5C,GACjBf,KAAKC,SAAS,CAACT,MAAMuB,EAAGtB,UAAS,EAAMC,MAAOA,EAAMM,KAAKT,MAAMG,MAAQC,UAAUZ,KAAKD,IAAIY,EAAMM,KAAKT,MAAMG,MAAMM,KAAKT,MAAMI,aACzHK,KAAKC,SAAS,CAACT,MAAMuB,EAAEtB,UAAS,EAAOC,MAAOA,EAAMM,KAAKT,MAAMG,MAAQC,UAAUZ,KAAKD,IAAIY,EAAMM,KAAKT,MAAMG,MAAMM,KAAKT,MAAMI,kBAE9H,GAAS,SAAN8D,EAAa,CACnB,IAAMC,EAAM1D,KAAK0B,KAAK1B,KAAKT,MAAMC,OAC3BuB,EAAI2C,EAAI3C,EACRrB,EAAQgE,EAAIhE,MACfM,KAAK2D,WAAW5C,GACjBf,KAAKC,SAAS,CAACT,MAAMuB,EAAGtB,UAAS,EAAMC,MAAOA,EAAMM,KAAKT,MAAMG,MAAQC,UAAUZ,KAAKD,IAAIY,EAAMM,KAAKT,MAAMG,MAAMM,KAAKT,MAAMI,aACzHK,KAAKC,SAAS,CAACT,MAAMuB,EAAEtB,UAAS,EAAOC,MAAOA,EAAMM,KAAKT,MAAMG,MAAQC,UAAUZ,KAAKD,IAAIY,EAAMM,KAAKT,MAAMG,MAAMM,KAAKT,MAAMI,kBAE9H,GAAS,UAAN8D,EAAc,CACpB,IAAMC,EAAM1D,KAAK2B,MAAM3B,KAAKT,MAAMC,OAC5BuB,EAAI2C,EAAI3C,EACRrB,EAAQgE,EAAIhE,MACfM,KAAK2D,WAAW5C,GACjBf,KAAKC,SAAS,CAACT,MAAMuB,EAAGtB,UAAS,EAAMC,MAAOA,EAAMM,KAAKT,MAAMG,MAAQC,UAAUZ,KAAKD,IAAIY,EAAMM,KAAKT,MAAMG,MAAMM,KAAKT,MAAMI,aACzHK,KAAKC,SAAS,CAACT,MAAMuB,EAAEtB,UAAS,EAAOC,MAAOA,EAAMM,KAAKT,MAAMG,MAAQC,UAAUZ,KAAKD,IAAIY,EAAMM,KAAKT,MAAMG,MAAMM,KAAKT,MAAMI,kBAE9H,GAAS,SAAN8D,EAAa,CACnB,IAAMC,EAAM1D,KAAK4B,KAAK5B,KAAKT,MAAMC,OAC3BuB,EAAI2C,EAAI3C,EACRrB,EAAQgE,EAAIhE,MACfM,KAAK2D,WAAW5C,GACjBf,KAAKC,SAAS,CAACT,MAAMuB,EAAGtB,UAAS,EAAMC,MAAOA,EAAMM,KAAKT,MAAMG,MAAQC,UAAUZ,KAAKD,IAAIY,EAAMM,KAAKT,MAAMG,MAAMM,KAAKT,MAAMI,aACzHK,KAAKC,SAAS,CAACT,MAAMuB,EAAEtB,UAAS,EAAOC,MAAOA,EAAMM,KAAKT,MAAMG,MAAQC,UAAUZ,KAAKD,IAAIY,EAAMM,KAAKT,MAAMG,MAAMM,KAAKT,MAAMI,aAGrIqC,OAAOC,aAAa2B,QAAQ,QAAQ5D,KAAKT,MAAMI,a,kCAGjD,WAEIqC,OAAOC,aAAa2B,QAAQ,QAAQ5D,KAAKT,MAAMI,WAClC0C,SAASC,cAAc,QAC/BuB,oBAAoB,UAAW7D,KAAKwC,cAAcC,KAAKzC,OAC5DqC,SAASwB,oBAAoB,aAAc7D,KAAK0C,iBAAiBD,KAAKzC,OACtEqC,SAASwB,oBAAoB,YAAa7D,KAAK2C,gBAAgBF,KAAKzC,S,oBAMxE,WAAU,IAAD,OACP,OACE,gCACE,uCACA,+BAAI,uBAAM8D,UAAU,QAAhB,oBAAgC9D,KAAKT,MAAMG,SAAa,uBAAMoE,UAAU,YAAhB,0BAA0C9D,KAAKT,MAAMI,gBACjH,gCACGK,KAAKT,MAAMC,MAAMuE,KAAI,SAACC,EAAK9C,GAAN,OACpB,cAAC+C,EAAD,CAAaD,IAAKA,GAAR9C,QAGd,qBACE4C,UAAU,SACVI,QAAS,WACP,EAAKpC,aAHT,sBAQA,sBAAKgC,UAAU,UAAf,UACE,qBACEA,UAAU,SACVI,QAAS,WACP,EAAKZ,SAAS,OAHlB,gBAQA,qBACEQ,UAAU,SACVI,QAAS,WACP,EAAKZ,SAAS,SAHlB,kBAQA,qBACEQ,UAAU,SACVI,QAAS,WACP,EAAKZ,SAAS,UAHlB,mBAQA,qBACEQ,UAAU,SACVI,QAAS,WACP,EAAKZ,SAAS,SAHlB,qBAUF,6BAAKtD,KAAKT,MAAME,SAAS,aAAa,qB,GAza3B0E,IAAMC,WA+anBH,EAAM,SAAC,GAAa,IAAXD,EAAU,EAAVA,IACb,OACE,6BACGA,EAAID,KAAI,SAACM,EAAMnD,GAAP,OACP,cAACoD,EAAD,CAAcC,UAAWF,GAAdnD,SAOboD,EAAO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACVC,EAAQ,OACRC,EAAuB,IAAdF,EAAmB,GAAKA,EAKrC,OAJIE,IACFD,GAAK,iBAAcC,IAInB,6BACE,qBAAKX,UAAWU,EAAhB,SACE,qBAAKV,UAAU,SAAf,SAAyBW,SAMjCC,IAASC,OAAO,cAACzF,EAAD,IAAUmD,SAASuC,eAAe,U","file":"static/js/main.3f3cc688.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './App.css';\nimport * as deepcopy from \"deepcopy\";\nfunction GiveRand(min, max) {\n  var p = Math.floor(Math.random() * (max - min) + min);\n  return p;\n}\n\n\n//For touch sense\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.xDown = null;                                                        \n    this.yDown = null;\n    this.firstTouch = null;\n    this.state = {\n      board: [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      gmaeOver: false,\n      score: 0,\n      Highscore: 0,\n    };\n  }\n\n  initBoard() {\n    let board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    let x1 = GiveRand(0, 4),\n      x2 = GiveRand(0, 4),\n      y1 = GiveRand(0, 4),\n      y2 = GiveRand(0, 4);\n    board[x1][y1] = 2 * GiveRand(1, 3);\n    board[x2][y2] = 2 * GiveRand(1, 3);\n    this.setState({ board, gmaeOver: false, score:0 });\n  }\n\n  getBlankCoordinates(Board) {\n    \n    const blankCoordinates = [];\n\n    for (let r = 0; r < Board.length; r++) {\n      for (let c = 0; c < Board[r].length; c++) {\n        if (Board[r][c] === 0) {\n          blankCoordinates.push([r, c]);\n        }\n      }\n    }\n\n    return blankCoordinates;\n  }\n\n  placeRand(board) {\n    const blankCoordinates = this.getBlankCoordinates(board);\n    const randomCoordinate = blankCoordinates[Math.floor(Math.random() * blankCoordinates.length)];\n    const randomNumber = 2*GiveRand(1,3);\n    \n    board[randomCoordinate[0]][randomCoordinate[1]] = randomNumber;\n    return board;\n  }\n\n  isChanged(original, updated) {\n    return (JSON.stringify(updated) === JSON.stringify(original)) ? false : true;\n  }\n\n\n  up(board) {\n    let b = deepcopy(board);\n    const a = deepcopy(b);\n    \n    for (let i = 0; i < 4; i++) {\n      for(let j=0;j  < 4;j++){\n        if(b[j][i]===0){\n          var p=j+1;\n          while(p<4 && b[p][i]===0 ){\n            p++\n          }\n          if(p===4)\n          break;\n          var temp=b[p][i];\n          b[p][i]=b[j][i]\n          b[j][i]=temp\n        }\n      }\n    }\n    var score=0;\n    for (let i = 0; i < 4; i++) {\n      for(let j=0;j<3;j++){\n        if(b[j][i]===b[j+1][i])\n        {\n          b[j][i]*=2\n          score+=b[j][i];\n          var k=j+1\n          while(k<3){\n            b[k][i]=b[k+1][i]\n            k++\n          }\n          b[k][i]=0\n        }\n      }\n    }\n    \n    if(this.isChanged(a,b))\n      {b = this.placeRand(b)}\n      \n    return {b,score};\n  }\n\n  down(board) {\n    let b = deepcopy(board);\n    const a = deepcopy(b);\n    \n    for (let i = 0; i < 4; i++) {\n      for(let j=3;j  > 0 ;j--){\n        if(b[j][i]===0){\n          var p=j-1;\n          while(p>=0 && b[p][i]===0 ){\n            p--\n          }\n          if(p===-1)\n          break;\n          var temp=b[p][i];\n          b[p][i]=b[j][i]\n          b[j][i]=temp\n        }\n      }\n    }\n    var score=0;\n    for (let i = 0; i < 4; i++) {\n      for(let j=3;j>0;j--){\n        if(b[j][i]===b[j-1][i])\n        {\n          b[j][i]*=2\n          score+=b[j][i]\n          var k=j-1\n          while(k>0){\n            b[k][i]=b[k-1][i]\n            k--\n          }\n          b[k][i]=0\n        }\n      }\n    }\n    \n    if(this.isChanged(a,b))\n      {b = this.placeRand(b)}\n\n   return {b,score};\n  }\n\n  right(board) {\n    let b = deepcopy(board);\n    const a = deepcopy(b);\n    \n    for (let i = 0; i < 4; i++) {\n      for(let j=3;j  > 0 ;j--){\n        if(b[i][j]===0){\n          var p=j-1;\n          while(p>=0 && b[i][p]===0 ){\n            p--\n          }\n          if(p===-1)\n          break;\n          var temp=b[i][p];\n          b[i][p]=b[i][j]\n          b[i][j]=temp\n        }\n      }\n    }\n    var score=0;\n    for (let i = 0; i < 4; i++) {\n      for(let j=3;j>0;j--){\n        if(b[i][j]===b[i][j-1])\n        {\n          b[i][j]*=2\n          score+=b[i][j];\n          var k=j-1\n          while(k>0){\n            b[i][k]=b[i][k-1]\n            k--\n          }\n          b[i][k]=0\n        }\n      }\n    }\n    \n    if(this.isChanged(a,b))\n      {b = this.placeRand(b)}\n\n   return {b,score};\n  }\n\n  left(board) {\n    let b = deepcopy(board);\n    const a = deepcopy(b);\n    \n    for (let i = 0; i < 4; i++) {\n      for(let j=0;j  < 4;j++){\n        if(b[i][j]===0){\n          var p=j+1;\n          while(p<4 && b[i][p]===0 ){\n            p++\n          }\n          if(p===4)\n          break;\n          var temp=b[i][p];\n          b[i][p]=b[i][j]\n          b[i][j]=temp\n        }\n      }\n    }\n    var score=0;\n    for (let i = 0; i < 4; i++) {\n      for(let j=0;j<3;j++){\n        if(b[i][j]===b[i][j+1])\n        {\n          b[i][j]*=2\n          score+=b[i][j]\n          var k=j+1\n          while(k<3){\n            b[i][k]=b[i][k+1]\n            k++\n          }\n          b[i][k]=0\n        }\n      }\n    }\n    \n    if(this.isChanged(a,b))\n      {b = this.placeRand(b)}\n\n   return {b,score};\n  }\n\n  isGameOver(board){\n    let PossMoves=[\n      this.isChanged(board,this.up(board).b),\n      this.isChanged(board,this.down(board).b),\n      this.isChanged(board,this.right(board).b),\n      this.isChanged(board,this.left(board).b)\n\n    ]\n\n    return (PossMoves.includes(true))?false:true;\n\n  }\n\n  componentDidMount() {\n    this.initBoard();  \n    var hs = window.localStorage.getItem('score')\n    var hsi = (hs)?JSON.parse(hs):0;\n    this.setState({Highscore:hsi})\n    const body = document.querySelector('body');\n    body.addEventListener('keydown', this.handleKeyDown.bind(this));\n    document.addEventListener('touchstart', this.handleTouchStart.bind(this),false);        \n    document.addEventListener('touchmove', this.handleTouchMove.bind(this),false);\n  }\n  \n\n  // getTouches(evt) {\n  //   return evt.touches ||             // browser API\n  //         evt.originalEvent.touches; // jQuery\n  // }                                                     \n\n  handleTouchStart(evt) {\n      //console.log(evt);\n      this.firstTouch = (evt.touches ||             // browser API\n      evt.originalEvent.touches)[0];                                      \n      this.xDown = this.firstTouch.clientX;                                      \n      this.yDown = this.firstTouch.clientY;                                      \n  };                                                \n\n  handleTouchMove(evt) {\n      if ( ! this.xDown || ! this.yDown ) {\n          return;\n      }\n\n      var xUp = evt.touches[0].clientX;                                    \n      var yUp = evt.touches[0].clientY;\n\n      var xDiff = this.xDown - xUp;\n      var yDiff = this.yDown - yUp;\n      // console.log(this.xDown,this.yDown)\n      // console.log(xDiff,yDiff);\n      if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {/*most significant*/\n          if ( xDiff > 0 ) {\n            this.makeMove('left');\n          } else {\n            this.makeMove('right');\n          }                       \n      } else {\n          if ( yDiff > 0 ) {\n            this.makeMove('up');\n          } else { \n            this.makeMove('down');\n          }                                                                 \n      }\n      /* reset values */\n      this.xDown = null;\n      this.yDown = null;                                             \n  }\n  handleKeyDown(e) {\n    const up = 38;\n    const right = 39;\n    const down = 40;\n    const left = 37\n    const n = 78;\n    // console.log(e.keyCode)\n    if (e.keyCode === up) {\n      this.makeMove('up');\n    } else if (e.keyCode === right) {\n      this.makeMove('right');\n    } else if (e.keyCode === down) {\n      this.makeMove('down');\n    } else if (e.keyCode === left) {\n      this.makeMove('left');\n    } else if (e.keyCode === n) {\n      this.initBoard();\n    }\n  }\n\n\n\n\n  makeMove(dir){\n    if(!this.state.gmaeOver){\n      if(dir==='up'){\n        const obj = this.up(this.state.board);\n        const b = obj.b;\n        const score = obj.score;\n        if(this.isGameOver(b))\n          this.setState({board:b, gmaeOver:true, score:(score+this.state.score), Highscore:Math.max(score+this.state.score,this.state.Highscore)});\n        else this.setState({board:b,gmaeOver:false, score:(score+this.state.score), Highscore:Math.max(score+this.state.score,this.state.Highscore)});\n      }\n      else if(dir==='down'){\n        const obj = this.down(this.state.board);\n        const b = obj.b;\n        const score = obj.score;\n        if(this.isGameOver(b))\n          this.setState({board:b, gmaeOver:true, score:(score+this.state.score), Highscore:Math.max(score+this.state.score,this.state.Highscore)});\n        else this.setState({board:b,gmaeOver:false, score:(score+this.state.score), Highscore:Math.max(score+this.state.score,this.state.Highscore)});\n      }\n      else if(dir==='right'){\n        const obj = this.right(this.state.board);\n        const b = obj.b;\n        const score = obj.score;\n        if(this.isGameOver(b))\n          this.setState({board:b, gmaeOver:true, score:(score+this.state.score), Highscore:Math.max(score+this.state.score,this.state.Highscore)});\n        else this.setState({board:b,gmaeOver:false, score:(score+this.state.score), Highscore:Math.max(score+this.state.score,this.state.Highscore)});\n      }\n      else if(dir==='left'){\n        const obj = this.left(this.state.board);\n        const b = obj.b;\n        const score = obj.score;\n        if(this.isGameOver(b))\n          this.setState({board:b, gmaeOver:true, score:(score+this.state.score), Highscore:Math.max(score+this.state.score,this.state.Highscore)});\n        else this.setState({board:b,gmaeOver:false, score:(score+this.state.score), Highscore:Math.max(score+this.state.score,this.state.Highscore)});\n      }\n    }\n    window.localStorage.setItem('score',this.state.Highscore)\n  }\n\n  componentWillUnmount(){\n    \n      window.localStorage.setItem('score',this.state.Highscore)\n      const body = document.querySelector('body');\n      body.removeEventListener('keydown', this.handleKeyDown.bind(this));\n      document.removeEventListener('touchstart', this.handleTouchStart.bind(this));        \n      document.removeEventListener('touchmove', this.handleTouchMove.bind(this));\n    \n    \n\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>2048!</h1>\n        <h3><span className=\"score\">Score: {this.state.score}</span><span className=\"highscore\"> High score: {this.state.Highscore}</span></h3>\n        <table>\n          {this.state.board.map((row, i) => (\n            <Row key={i} row={row} />\n          ))}\n        </table>\n        <div\n          className=\"button\"\n          onClick={() => {\n            this.initBoard();\n          }}\n        >\n          New Game\n        </div>\n        <div className=\"buttons\">\n          <div\n            className=\"button\"\n            onClick={() => {\n              this.makeMove('up');\n            }}\n          >\n            Up\n          </div>\n          <div\n            className=\"button\"\n            onClick={() => {\n              this.makeMove('down');\n            }}\n          >\n            down\n          </div>\n          <div\n            className=\"button\"\n            onClick={() => {\n              this.makeMove('right');\n            }}\n          >\n            right\n          </div>\n          <div\n            className=\"button\"\n            onClick={() => {\n              this.makeMove('left');\n            }}\n          >\n            Left\n          </div>\n        </div>\n        \n        <h2>{this.state.gmaeOver?\"Game Over!\":\"Game on!!\"}</h2>\n      </div>\n    );\n  }\n}\n\nconst Row = ({ row }) => {\n  return (\n    <tr>\n      {row.map((cell, i) => (\n        <Cell key={i} cellValue={cell} />\n      ))}\n    </tr>\n  );\n};\n\n\nconst Cell = ({ cellValue }) => {\n  let color = 'cell';\n  let value = (cellValue === 0) ? '' : cellValue;\n  if (value) {\n    color += ` color-${value}`;\n  }\n\n  return (\n    <td>\n      <div className={color}>\n        <div className=\"number\">{value}</div>\n      </div>\n    </td>\n  );\n};\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}